@model ITI.MVC.LinkedIn.Web.Models.ViewModels.SignUpVM
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="~/Content/MoahamedCss/style.css">
    <title>SignUp</title>
    <script src="https://kit.fontawesome.com/5028f5981e.js" crossorigin="anonymous"></script>
</head>
<body class="signup-page">
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" ,@class = "signup__form" }))
        {
            @Html.AntiForgeryToken()
            <div class="Signup__Header">
            <div class="signup__logo">
                Linked<i class="fab fa-linkedin"></i>
            </div>
            <div class="signup__caption">
                Make the most of your professional life
            </div>
        </div>

        <div class="signup__main">
            <div class="signup-form-input-container">
                @*<input class="signup-form-input" id="Email" type="text" placeholder="Email">*@
                @*<label for="Email">Email</label>*@
                @Html.LabelFor(e => e.Email)
                @Html.EditorFor(e => e.Email, new { htmlAttributes = new { @class = "signup-form-input", placeholder = "Email" } })
                @Html.ValidationMessageFor(e => e.Email, null, new { @class = "text-danger" })

            </div>
            <div class="signup-form-input-container">
                @*<label for="password">Password</label>
            <input class="signup-form-input" id="password" type="password" placeholder="Password(6 or more characters)">*@
                @Html.LabelFor(e => e.Password)
                @Html.EditorFor(e => e.Password, new { htmlAttributes = new { @class = "signup-form-input", placeholder = "Password(6 or more characters)" } })
                @Html.ValidationMessageFor(e => e.Password, null, new { @class = "text-danger" })
            </div>
            <div class="signup-form-input-container">
                @*<label for="Fname">First name</label>
            <input class="signup-form-input" id="Fname" type="text" placeholder="First name">*@
                @Html.LabelFor(e => e.FirstName)
                @Html.EditorFor(e => e.FirstName, new { htmlAttributes = new { @class = "signup-form-input", placeholder = "First name" } })
                @Html.ValidationMessageFor(e => e.FirstName, null, new { @class = "text-danger" })
            </div>
            <div class="signup-form-input-container">
                @*<label for="Lname">Last Name</label>
            <input class="signup-form-input" id="Lname" type="text" placeholder="Last Name">*@
                @Html.LabelFor(e => e.LastName)
                @Html.EditorFor(e => e.LastName, new { htmlAttributes = new { @class = "signup-form-input", placeholder = "Last Name" } })
                @Html.ValidationMessageFor(e => e.LastName, null, new { @class = "text-danger" })
            </div>
            <div class="signup-form-input-container">
                @*<label for="cars">Country:</label>
                    <select class="signup-form-input" id="Countries">
                <option value="Egypt">Egypt</option>
                <option value="usa">usa</option>
                <option value="germany">germany</option>
            </select>*@
                @Html.LabelFor(e => e.Country)
                @Html.DropDownListFor(e => e.Country, new SelectList(Model.Countries, "Name", "Name"), "Select Country",
                  new { @class = "signup-form-input" })
                @Html.ValidationMessageFor(e => e.Country, null, new { @class = "text-danger" })
            </div>
            <div class="signup-form-input-container">
                @Html.LabelFor(e => e.BirthDate)
                @Html.EditorFor(e => e.BirthDate, new { htmlAttributes = new { @class = "signup-form-input", placeholder = "Last Name" ,type = "date"} })
                @Html.ValidationMessageFor(e => e.BirthDate, null, new { @class = "text-danger" })
            </div>
            <div class="signup-form-input-container">
                @*<label for="PostalCode">Postal code</label>
            <input class="signup-form-input" id="PostalCode" type="text" placeholder="Postal code">*@
                @Html.LabelFor(e => e.PostalCode)
                @Html.TextBoxFor(e => e.PostalCode, new { @class = "signup-form-input", placeholder = "Postal code" })
                @Html.ValidationMessageFor(e => e.PostalCode, null, new { @class = "text-danger" })
            </div>
            <div class="signup-form-input-container signup-upload">
                <label for="UploadPhoto"><i class="fas fa-camera"></i></label>
                <input class="signup-form-input" id="UploadPhoto" type="file" accept="image/*" name="ImageFile">
            </div>

            <div class="signup__aggr">
                By clicking Agree & Join, you agree to the LinkedIn <a href="">User Agreement, Privacy Policy</a> , and
                <a href="">Cookie Policy</a> .
            </div>
            <div class="signup__btns">
                <button class="signup-btn signup-btn--sky" type="submit">Agree & Join</button>
                <button class="signup-btn signup-btn--dark-blue"><i class="fab fa-facebook-f"></i> Continue With Facebook</button>
            </div>
            <div style="text-align: center;">
                Already on LinkedIn? <a href="">Sign in</a>
            </div>
        </div>
    }
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</body>
</html>