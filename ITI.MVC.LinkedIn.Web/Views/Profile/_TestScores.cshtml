@model ITI.MVC.LinkedIn.Web.Models.ViewModels.TestScoresVM

@{
    string action = ViewBag.actionName;
    AjaxOptions opts;
    if (Model.TestScoreCount > 0)
    {
        if (action == "EditTest")
        {
            opts = new AjaxOptions
            {
                HttpMethod = "POST",
                UpdateTargetId = "TestScoreColl",
                InsertionMode = InsertionMode.InsertAfter,
                OnSuccess = "SucessEditTestScore()"


            };
        }
        else
        {
               opts = new AjaxOptions
            {
                HttpMethod = "POST",
                UpdateTargetId = "TestScoreColl",
                InsertionMode = InsertionMode.InsertAfter,
                OnSuccess = "SucessTestScore()"


            };
        }
    }
    else
    {
        opts = new AjaxOptions
        {
            HttpMethod = "POST",
            UpdateTargetId = "acc-container",
            InsertionMode = InsertionMode.InsertAfter,
            OnSuccess = "SucessTestScore()"


        };
    }
    List<SelectListItem> items = new List<SelectListItem>();


    foreach (var item in Model.Experiences)
    {
        SelectListItem Selecteditem;
        if (item.WorkExperience != null)
        {
            Selecteditem = new SelectListItem { Text = ("Worked As " + item.WorkExperience.Title + " at " + item.Organization.Name), Value = item.Id.ToString() };
        }
        else
        {
            Selecteditem = new SelectListItem { Text = ("Student At " + item.Organization.Name + " , " + item.EducationExperience.Degree), Value = item.Id.ToString() };

        }
        items.Add(Selecteditem);
    }

    SelectList selectListItems = new SelectList(
items, "Value", "Text");
}


@using (Ajax.BeginForm(action, "Profile", opts))
{
    <div class="form-controls">
        <div class="form-group">
            <label for="" class="required">Test name</label>
            @Html.EditorFor(e => e.TestName, new { htmlAttributes = new { @class = "form-control", placeholder = "" } })
            @Html.ValidationMessageFor(e => e.TestName, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="">Associated with</label>
            @Html.DropDownListFor(e => e.ExperinceId, selectListItems, "-", new { @class = "form-control" })
            @Html.ValidationMessageFor(e => e.ExperinceId, null, new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label for="" class="required">Score</label>
            @Html.EditorFor(e => e.Score, new { htmlAttributes = new { @class = "form-control", placeholder = "" } })
            @Html.ValidationMessageFor(e => e.Score, null, new { @class = "text-danger" })
        </div>



        <div class="form-group">
            <label for="" class="">
                Test Date
            </label>
            <div class="row">
                <div class="col-sm-6">
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.DropDownListFor(e => e.Month, EnumHelper.GetSelectList(typeof(ITI.MVC.LinkedIn.Web.Models.Enums.MonthEnum)), "Month", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="col-sm-12">
                        @Html.DropDownListFor(e => e.Year, new SelectList(ITI.MVC.LinkedIn.Web.Models.Enums.YearList.YearListFun()), "Year", new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="">Description</label>
            @Html.TextAreaFor(e => e.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(e => e.Description, null, new { @class = "text-danger", cols = "30", rows = "4" })
        </div>
    </div>
    @Html.HiddenFor(e => e.TestScoreCount)
    <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>
}
