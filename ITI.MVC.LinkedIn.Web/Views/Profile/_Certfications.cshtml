@model ITI.MVC.LinkedIn.Web.Models.ViewModels.CertificationsVM
@{ string action = ViewBag.actionName;}
@using (Ajax.BeginForm(action, "Profile", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure", UpdateTargetId = "Background", InsertionMode = InsertionMode.InsertAfter }))
{
    if (action == "EditCertification")
    {
        @Html.HiddenFor(m => m.UserCertification.Certification.Id)
        @Html.HiddenFor(m => m.UserCertification.OrganizationId)
        @*@Html.HiddenFor(m => m.Education.UserId)*@
    }


                <div class="form-controls">
                        <div class="form-group">
                            <label for="" class="required">Name</label>
                            @Html.TextBoxFor(m => m.UserCertification.Certification.Name, new { @class = "form-control", @placeholder = "Ex:Cisco Cirtficate" })
                            @Html.ValidationMessageFor(m => m.UserCertification.Certification.Name, "", new { @class = "text-danger" })


                            @*<input class="form-control" type="text" name="" id="" placeholder="Ex:Cisco Cirtficate">*@
                        </div>

                        <div class="form-group">
                            <label for="" class="required">Issuing Organization</label>
                            @Html.TextBoxFor(m => m.UserCertification.Organization.Name, new { @class = "form-control", @placeholder = "Ex:Cisco " })
                            @Html.ValidationMessageFor(m => m.UserCertification.Organization.Name, "", new { @class = "text-danger" })


                            
                        </div>
                        <div class="form-group">
                            <div>
                                <input type="checkbox" name="" id="CurrentlyWorking">
                                <span>
                                    This credential does not expire
                                </span>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <label for="" class="required">Issue Date</label>
                                    <div class="row">
                                        <div class="col-sm-12">

                                            @Html.DropDownListFor(e => e.StartMonth, EnumHelper.GetSelectList(typeof(ITI.MVC.LinkedIn.Web.Models.Enums.MonthEnum)), "Month", new { @class = "form-control" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(e => e.StartYear, new SelectList(ITI.MVC.LinkedIn.Web.Models.Enums.YearList.YearListFun()), "Year", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6" id="EndDatecertificate">
                                    <label for="" class="required">Expiration Date</label>
                                    <h4 id="PresentWorkDate">No Expiration Date</h4>
                                    <div class="row" id="EndWorkDate">
                                        <div class="col-sm-12">

                                            @Html.DropDownListFor(e => e.EndMonth, EnumHelper.GetSelectList(typeof(ITI.MVC.LinkedIn.Web.Models.Enums.MonthEnum)), "Month", new { @class = "form-control" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(e => e.EndYear, new SelectList(ITI.MVC.LinkedIn.Web.Models.Enums.YearList.YearListFun()), "Year", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="" class="required">Credential ID</label>
                            @Html.TextBoxFor(m => m.UserCertification.CredentialId, new { @class = "form-control", @placeholder = " " })
                            @Html.ValidationMessageFor(m => m.UserCertification.CredentialId, "", new { @class = "text-danger" })



                            @*<input class="form-control" type="text" name="" id="" placeholder="">*@
                        </div>
                        <div class="form-group">
                            <label for="" class="">Credential URL</label>
                            @Html.TextBoxFor(m => m.UserCertification.CredentialUrl, new { @class = "form-control", @placeholder = "" })
                            @Html.ValidationMessageFor(m => m.UserCertification.CredentialUrl, "", new { @class = "text-danger" })


                            @*<input class="form-control" type="text" name="" id="" placeholder="">*@
                        </div>

                    </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
@if (action == "EditCertification")
{
                    @Ajax.ActionLink("delete", "DeleteCertification", new { id = Model.UserCertification.Certification.Id },
         new AjaxOptions
         {
             OnSuccess = "OnSuccess"

         })
}
                            </div>
            
}
@Html.Partial("_Scripts")

<script>
    //$("#CurrentlyWorking").s
    $('input[type="checkbox"]').click(function () {
        if ($(this).prop("checked") == true) {
            debugger;
            $("#EndDatecertificate").hide();
        }
        else if ($(this).prop("checked") == false) {
            debugger;
            $("#EndDatecertificate").show();
        }
    });
    function OnSuccess() {
        debugger
        $("#Licenses1").modal('hide');
        $("#Background").load(" #Background");
    }
</script>