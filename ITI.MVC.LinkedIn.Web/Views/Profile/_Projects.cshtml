@model ITI.MVC.LinkedIn.Web.Models.ViewModels.ProjectsVM
@{
    AjaxOptions opts = new AjaxOptions
    {
        HttpMethod = "POST"

    };
    List<SelectListItem> items = new List<SelectListItem>();


    foreach (var item in Model.Experiences)
    {
        SelectListItem Selecteditem;
        if (item.WorkExperience != null)
        {
            Selecteditem = new SelectListItem { Text = ("Worked As " + item.WorkExperience.Title + " at " + item.Organization.Name), Value = item.Id.ToString() };
        }
        else
        {
            Selecteditem = new SelectListItem { Text = ("Student At " + item.Organization.Name + " , " + item.EducationExperience.Degree), Value = item.Id.ToString() };

        }
        items.Add(Selecteditem);
    }

    SelectList selectListItems = new SelectList(
items, "Value", "Text");
}
<div class="modal fade" id="Projects" tabindex="-1" role="dialog" aria-labelledby="FullModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content row">
            <div class="modal-header">
                <h5 class="modal-title" id="FullModalLabel">Add project</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                    
                    @using (Ajax.BeginForm("AddProject", "Profile", opts))
                    {
                    <div class="form-controls">
                        <div class="form-group">
                            <label for="" class="required">Project name </label>
                            @Html.EditorFor(e => e.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(e => e.Name, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <div>
                                <input type="checkbox" name="" id="CurrentlyWorking">
                                <span>
                                    I am currently working on this project
                                </span>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <label for="" class="required">Start Date</label>
                                    <div class="row">
                                        <div class="col-sm-12">

                                            @Html.DropDownListFor(e => e.StartMonth, EnumHelper.GetSelectList(typeof(ITI.MVC.LinkedIn.Web.Models.Enums.MonthEnum)), "Month", new { @class = "form-control" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(e => e.StartYear, new SelectList(ITI.MVC.LinkedIn.Web.Models.Enums.YearList.YearListFun()), "Year", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <label for="" class="required">End Date</label>
                                    <h4 id="PresentWorkDate">Present</h4>
                                    <div class="row" id="EndWorkDate">
                                        <div class="col-sm-12">

                                            @Html.DropDownListFor(e => e.EndMonth, EnumHelper.GetSelectList(typeof(ITI.MVC.LinkedIn.Web.Models.Enums.MonthEnum)), "Month", new { @class = "form-control" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(e => e.EndYear, new SelectList(ITI.MVC.LinkedIn.Web.Models.Enums.YearList.YearListFun()), "Year", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="" class="">Creator</label>
                            @Html.EditorFor(e => e.Creator, new { htmlAttributes = new { @class = "form-control", placeholder = "" } })
                            @Html.ValidationMessageFor(e => e.Creator, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="">Associated with</label>
                            @Html.DropDownListFor(e => e.ExperinceId, selectListItems, "-", new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.ExperinceId, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="" class="">Project URL</label>
                            @Html.EditorFor(e => e.Creator, new { htmlAttributes = new { @class = "form-control", placeholder = "" } })
                            @Html.ValidationMessageFor(e => e.Url, null, new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="">Description</label>
                            @Html.TextAreaFor(e => e.Creator, new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.Creator, null, new { @class = "text-danger" , cols="30" , rows="4" })
                        </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
                    </div>
                    }
            </div>
        </div>
    </div>
</div>
