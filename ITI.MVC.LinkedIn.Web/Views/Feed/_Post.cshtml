@*// <author>Ibrahim Farhan</author>*@

@model PostVM

@{
    Image image = Model.Post.Text.Images.Where(i => i.ImageRole == ImageRole.Post).FirstOrDefault();
    string imageUrl = image != null ? Url.Content("~/Uploads" + Path.GetFileName(image.Url)) : "";
    bool postIsLiked = Model.Post.Likes.FirstOrDefault(l => l.UserId == Model.User.Id) != null;
}

<div class="card post shadow">
    <div class="post-body card-body">
        <div class="post-header card-header">
            <img class="post-profile-img" src="@imageUrl" alt="profile image" />
            <div class="post-header-creator-info">
                <h6>@(Model.Post.User.FirstName + " " + Model.Post.User.LastName)</h6>
                <small class="text-muted">@Model.Post.User.Headline</small>
                <small class="text-muted">@Model.Post.Text.Time</small>
            </div>
        </div>
        <div class="post-body card-body">
            <p class="card-text">@Model.Post.Text.Content</p>
        </div>
        @if (Model.Post.Text.Images.Count != 0)
        {
            <img class="card-img-top" src="@Url.Content("~/Uploads/" + Path.GetFileName(Model.Post.Text.Images.ToList()[0].Url))" />
        }
    </div>
    <div class="post-status">

        <p class="card-text">
            <small class="text-muted">
                <small class="text-muted" data-toggle="modal" data-target=".bd-example-modal-sm">
                    <i class="far fa-thumbs-up">@(Model.Post.Likes.Count != 0 ? Model.Post.Likes.Count.ToString() : "") </i>&nbsp;
                    <i class="far fa-comments"></i>&nbsp;
                    <i class="fas fa-share">@(Model.Post.Shares.Count != 0 ? Model.Post.Shares.Count.ToString() : "") </i>
                </small>
                <small class="text-muted">@(Model.Post.Comments.Count != 0 ? Model.Post.Comments.Count.ToString() + " Comment" : "")</small>
            </small>
        </p>

    </div>
    <div class="post-footer card-footer" style="display: flex;">
        <div class="post-footer-action">
            <div class="post-footer-like">
                <button 
                        id="@Model.Post.TextId"
                        class="post-like-btn btn btn-light reactions-container btn-lg btn btn-secondary">
                    <i 
                       id="@("likeIcon"+Model.Post.TextId)" 
                       class="far fa-thumbs-up container__Sign reaction-sign like-icon @(postIsLiked ? "text-primary" : "")"></i> like
                </button>
            </div>
            &nbsp;
            <div>
                <button class="btn btn-light btn-lg">
                    <i class="far fa-comment-dots container__Sign comment-sign"></i>
                    comment
                </button>
            </div>
            &nbsp;
            <div>
                <button class="btn btn-light btn-lg" data-toggle="modal" data-target="#post">
                    <i class="far fa-share-square container__Sign share-sign "></i>
                    share
                </button>
            </div>
        </div>

        @Html.Partial("_CreateComment", new CommentVM())

        @foreach (Comment comment in Model.Post.Comments)
        {
            Html.Partial("_Comment", comment);
        }

    </div>
</div>